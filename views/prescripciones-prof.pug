doctype html
html
  head
    title Mis Prescripciones
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    link(rel='stylesheet', href='/styles/prescripciones-prof.css')
    link(rel='stylesheet', href='https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css')
    link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css')
    script(src='https://code.jquery.com/jquery-3.5.1.min.js')
    script(src='https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js')
    script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js')
    script(src='https://cdn.jsdelivr.net/npm/sweetalert2@10')


  body
    nav.navbar.navbar-expand-lg.navbar-dark.bg-primary
      a.navbar-brand(href='/home')
        i.fas.fa-clinic-medical.mr-2
        | Clínica
      button.navbar-toggler(type='button', data-toggle='collapse', data-target='#navbarNav')
        span.navbar-toggler-icon
      .collapse.navbar-collapse#navbarNav
        ul.navbar-nav.mr-auto
          li.nav-item
            a.nav-link(href='/home')
              i.fas.fa-home.mr-1
              | Inicio
          li.nav-item
            a.nav-link(href='/pacientes')
              i.fas.fa-user-injured.mr-1
              | Pacientes
          li.nav-item
            a.nav-link(href='/prescripciones/mis-prescripciones')
              i.fas.fa-prescription.mr-1
              | Prescripciones
          li.nav-item
            a.nav-link(href='usuarioAdmin/miperfil')
              i.fas.fa-user-circle.mr-1
              | Mi Perfil
        ul.navbar-nav.ml-auto
          li.nav-item
            a.nav-link(href='/auth/logout')
              i.fas.fa-sign-out-alt.mr-1
              | Cerrar sesión


    .container.mt-5
      h1.text-center.mb-4 Mis Prescripciones

      .d-flex.justify-content-between.mb-3
        a.btn.btn-primary(href='/pacientes')
          i.fas.fa-notes-medical.mr-1
          | Prescribir
        select#filtroEstado.form-control.w-auto
          option(value='todas') Todas
          option(value='pendiente') Pendientes
          option(value='completada') Completadas
          option(value='sin-prestaciones') Sin prestaciones

      if prescripciones.length
        .table-responsive
          table.table.table-hover
            thead.thead-dark
              tr
                th Paciente
                th Fecha
                th Estado
                th Acciones
            tbody#tablaPrescripciones
              each p in prescripciones
                - const tienePrestaciones = p.prestaciones && p.prestaciones.length > 0;
                - const pendiente = tienePrestaciones && p.prestaciones.some(pre => !pre.resultado?.trim() || !pre.observacion?.trim());
                - let estado = '';
                if pendiente
                  - estado = 'pendiente';
                else if !tienePrestaciones
                  - estado = 'sin-prestaciones';
                else
                  - estado = 'completada';

                tr(class=estado)
                  td #{p.nombre_paciente} #{p.apellido_paciente}
                  td #{new Date(p.fecha_prescripcion).toLocaleDateString('es-AR')}
                  if estado === 'completada'
                    td.text-success Completada
                  else if estado === 'pendiente'
                    td.text-warning Pendiente
                  else if estado === 'sin-prestaciones'
                    td.text-info Sin prestaciones
                  td
                    a.btn.btn-sm.btn-info(href=`/prescripciones/${p.id_prescripcion}`)
                      i.fas.fa-eye.mr-1
                      | Ver
                    if estado === 'pendiente'
                      button.btn.btn-sm.btn-warning.ml-1(data-toggle='modal', data-target='#modal-' + p.id_prescripcion)
                        i.fas.fa-edit.mr-1
                        | Completar

    each p in prescripciones
      - const tienePrestaciones = p.prestaciones && p.prestaciones.length > 0;
      - const pendiente = tienePrestaciones && p.prestaciones.some(pre => !pre.resultado?.trim() || !pre.observacion?.trim());
      if pendiente
        .modal.fade(id='modal-' + p.id_prescripcion, tabindex='-1', role='dialog')
          .modal-dialog.modal-lg(role='document')
            .modal-content
              .modal-header
                h5.modal-title Completar prestaciones de #{p.nombre_paciente} #{p.apellido_paciente}
                button.close(type='button', data-dismiss='modal')
                  span &times;
              .modal-body
                form(id=`form-${p.id_prescripcion}`)
                  each prestacion in p.prestaciones
                    if (!prestacion.resultado || !prestacion.resultado.trim() || !prestacion.observacion || !prestacion.observacion.trim())
                      .card.mb-3.shadow-sm
                        .card-body
                          h6.mt-3.font-weight-bold= prestacion.nombre || 'Prestacion sin nombre'
                          .form-group
                            label Resultado
                            input.form-control(type='text', name='resultado', data-id=prestacion.id_prescripcion_prestacion)
                          .form-group
                            label Observación
                            textarea.form-control(name='observacion', rows='2', data-id=prestacion.id_prescripcion_prestacion)
              .modal-footer
                button.btn.btn-secondary(type='button', data-dismiss='modal') Cancelar
                button.btn.btn-primary(type='button', onclick=`guardarResultados(${p.id_prescripcion})`) Guardar

    script.
      document.getElementById('filtroEstado').addEventListener('change', function () {
        const filtro = this.value;
        const filas = document.querySelectorAll('#tablaPrescripciones tr');
        filas.forEach(fila => {
          if (filtro === 'todas') {
            fila.style.display = '';
          } else {
            fila.style.display = fila.classList.contains(filtro) ? '' : 'none';
          }
        });
      });

      function guardarResultados(idPrescripcion) {
        const form = document.getElementById(`form-${idPrescripcion}`);
        const inputs = form.querySelectorAll('input[name="resultado"], textarea[name="observacion"]');

        const datos = {};
        inputs.forEach(input => {
          const id = input.dataset.id;
          if (!datos[id]) datos[id] = {};
          datos[id][input.name] = input.value;
        });

        const datosCompletos = Object.entries(datos)
          .filter(([id, {resultado, observacion }]) => resultado && observacion);

        if(datosCompletos.length === 0){
          Swal.fire('Aviso', 'Se debe completar al menos una prestacion', 'warning');
          return;
        }

        console.log('Datos a enviar:', datos);

        const peticiones = datosCompletos.map(([id, { resultado, observacion }]) => {
          return fetch(`/prescripcion_prestacion/${id}`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ resultado, observacion })
          });
        });

        Promise.all(peticiones)
          .then(respuestas => {
            if (respuestas.every(r => r.ok)) {
              Swal.fire('Éxito', 'Prestaciones actualizadas', 'success').then(() => location.reload());
            } else {
              throw new Error('Error al actualizar una o más prestaciones');
            }
          })
          .catch(err => {
            console.error(err);
            Swal.fire('Error', 'No se pudieron actualizar todas las prestaciones', 'error');
          });
      }
